
import React, { FC } from "react";
import { View, Text, StyleSheet, Image, StyleProp, ViewStyle } from "react-native";
import { Theme, Font } from "../../style";

enum BaseItemType {
    ITEM_BASE_HEADER = 0,
    ITEM_BASE = 1,
}

type Props = React.ComponentProps<typeof View> & {
    itemType?: BaseItemType;
    title?: string;
    content?: string;
    itemStyle?: StyleProp<ViewStyle>;
};

const ListBaseItemHeader: FC<Props> = ({ title, content, itemStyle, ...props }) => (
    <View style={[styles.container, itemStyle,]} {...props}>
        <Image
            source={require('../../assets/layout/policy/note.png')}
        />
        <Text style={[styles.title, {marginStart: 13 }]}>{title}</Text>
    </View>
);


const ListBaseItem: FC<Props> = ({ title, content, itemStyle, ...props }) => (
    <View style={[styles.container, itemStyle,]} {...props}>
        <Text style={[styles.subTitle, { flex: 1, flexBasis: '50%' }]}>{title}</Text>
        <Text style={[styles.content, { flexBasis: '50%', textAlign: 'right' }]}>{content}</Text>
    </View>
);

const styles = StyleSheet.create({
    container: {
        alignItems:"center",
        backgroundColor: "#ffffff",
        flexDirection: "row"
    },
    title: {
        marginStart: Theme.margin.small,
        lineHeight: 22,
        fontSize: 16,
        fontWeight: "500",
        fontStyle: "normal",
        letterSpacing: 0,
        fontFamily: Font.primary,
        color: "#333333",
    },
    subTitle: {
        lineHeight: 20,
        fontSize: 14,
        fontWeight: "500",
        fontStyle: "normal",
        fontFamily: Font.primary,
        color: "#999999",
    },
    content: {
        lineHeight: 18,
        fontSize: 13,
        fontWeight: "500",
        fontStyle: "normal",
        letterSpacing: 0,
        fontFamily: Font.primary,
        color: "#333333",
    },
});

export { BaseItemType }
export default ({ itemType, ...props }: Props) => {
  if (itemType == BaseItemType.ITEM_BASE) {
    return <ListBaseItem {...props} />;
  } else if (itemType == BaseItemType.ITEM_BASE_HEADER) {
    return <ListBaseItemHeader {...props} />;
  } else {
      return <></>
  }
};
