import * as React from 'react';
import { View } from 'react-native';
import { Container, Tab, Tabs } from 'native-base';
import { palette as PruPalette } from '../../theme';
import { useFocusEffect } from '@react-navigation/core';
import { TabBar } from '../tab-bar/tab-bar';

export interface TabViewProps {
  // style?: ViewStyle,
  // initialPage?: number,
  children?: any;
  iconChildren?: any;
  toolWidth?: number;
  onChangeTab?: Function;
  containerStyle?: any;
  initialPage?: number;
  page?: number;
  tabValues?: (tab:number) => number;
  style?: {
    isDivideEqually?: boolean;
    divideEquallySection?: number;
    activeColor?: string;
    inactiveColor?: string;
    marginLeft?: number;
    tabMargin?: number;
    fontWeight?:
      | 'normal'
      | 'bold'
      | '100'
      | '200'
      | '300'
      | '400'
      | '500'
      | '600'
      | '700'
      | '800'
      | '900';
    inActiveFontWeight?:
      | 'normal'
      | 'bold'
      | '100'
      | '200'
      | '300'
      | '400'
      | '500'
      | '600'
      | '700'
      | '800'
      | '900';
    borderBottomWidth?: number;
    fontSize?: number;
    lineHeight?: number;
    bottomSpacing?: number;
  };
}

export const TabView: React.FunctionComponent<TabViewProps> = (props) => {
  const [initialPage, setInitialPage] = React.useState(
    props.initialPage && props.initialPage > props.children.length ? props.initialPage : 0,
  );
  useFocusEffect(
    React.useCallback(() => {
      setInitialPage(
        props.initialPage && props.initialPage < props.children.length ? props.initialPage : 0,
      );
    }, [props.initialPage]),
  );
  return (
    <Container style={props.containerStyle}>
      <Tabs
        initialPage={initialPage}
        page={props.page}
        onChangeTab={props.onChangeTab}
        locked
        renderTabBar={() => (
          <TabBar
            tabValues={props.tabValues}
            activeStyle={{
              fontWeight: props.style ? props.style.fontWeight || 'bold' : 'bold',
              activeColor: props.style
                ? props.style.activeColor || PruPalette.cobalt
                : PruPalette.cobalt,
              fontSize: props.style.fontSize ? props.style.fontSize : undefined,
              lineHeight: props.style.lineHeight ? props.style.lineHeight : undefined,
            }}
            inActiveStyle={{
              fontWeight: props.style ? props.style.inActiveFontWeight || 'bold' : 'bold',
              inactiveColor: props.style
                ? props.style.inactiveColor || PruPalette.grey66
                : PruPalette.grey66,
              fontSize: props.style.fontSize ? props.style.fontSize : undefined,
              lineHeight: props.style.lineHeight ? props.style.lineHeight : undefined,
            }}
            containerStyle={{
              borderWidth: 0,
              // width: 300,
              marginLeft: props.style.startFrom0
                ? 0
                : props.style
                ? props.style.marginLeft || 21
                : 21,
            }}
            tabCustomStyle={{
              marginRight: props.style ? props.style.tabMargin || 26 : 26,
            }}
            toolWidth={props.toolWidth || 0}
            isDivideEqually={props.style.isDivideEqually || false}
            borderBottomWidth={props.style.borderBottomWidth}
            bottomSpacing={props.style.bottomSpacing}
            divideEquallySection={
              props.style.divideEquallySection ? props.style.divideEquallySection : undefined
            }
          />
        )}>
        {props.children.length ? (
          props.children
            .filter((tabView) => tabView)
            .map((childrenComponent, index) => {
              return (
                <Tab
                  tabStyle={{ height: 3 }}
                  key={index}
                  heading={childrenComponent.props.tabLabel}>
                  {childrenComponent}
                </Tab>
              );
            })
        ) : (
          <Tab heading={props.children.props.tabLabel}>{props.children}</Tab>
        )}
      </Tabs>
      <View style={{ flexDirection: 'row', marginLeft: -(props.toolWidth || 0) }}>
        {props.iconChildren}
      </View>
    </Container>
  );
};
