import React, { FunctionComponent as Component } from 'react';
import { View, FlatList, Text } from 'react-native';
import { Resource, ContentSalesReadlog } from 'common_services_frontend';
import { ErrorPage } from 'common_ui_components/app/components/error-page/error-page';
import { resourceListStyles as styles } from './resource-list.styles';
import { ResourceItem } from '../resource-item/resource-item';
import { ItemSeparatorWrap } from '../../common/item-separator/item-separator';
import { TestID } from '../../test-id';
import { palette, spacing, textStyleSet } from '../../../theme';

export interface ResourceListProps {
  data: Resource[];
  onItemPressed?: (item: Resource) => void;
  highlightText?: string;
  readLog: ContentSalesReadlog[];
}

export const ResourceList: Component<ResourceListProps> = (props) => {
  const _keyExtractor = (item, index) => index.toString();

  const _onPressItem = (item) => {
    if (props.onItemPressed !== undefined) {
      props.onItemPressed(item);
    }
  };

  const _renderItem = ({ item, index }) => {
    let isUnread = false;
    if (item.module === 'Promotion') {
      isUnread =
        props.readLog?.find((log) => {
          return log.contentId === item.uuid;
        }) === undefined;
    }


    return (
      <ResourceItem
        accessible={false}
        key={index}
        data={{ ...item, highlight_text: props.highlightText }}
        isUnread={isUnread}
        onPress={() => _onPressItem(item)}
      />
    );
  };
  return (
    <View
      testID={TestID.ResourceList}
      accessibilityLabel={TestID.ResourceList}
      style={[styles.WRAPPER]}>
      {props.data.length ? (
        <FlatList
          data={props.data}
          // ItemSeparatorComponent={ItemSeparator}
          keyExtractor={_keyExtractor}
          renderItem={_renderItem}
          ListFooterComponent={
            <View
              style={{
                justifyContent: 'center',
                alignItems: 'center',
                paddingVertical: spacing.spacing10,
                backgroundColor: palette.greyeb,
                height: 200,
              }}>
              <Text
                style={{
                  ...textStyleSet.content_14_reg,
                  color: palette.grey85,
                }}>
                {/* {t(RecruitmentTranslateKey.no_more)} */}
              </Text>
            </View>
          }
        />
      ) : (
        <ErrorPage
          style={{
            paddingTop: 93,
          }}
          icon="no_content"
          textKey="no_resources"
        />
      )}
    </View>
  );
};
