import { TextStyle, ViewStyle, View, Text, TouchableOpacity, Dimensions } from 'react-native';
import { CommonTranslateKey } from '../../../translation/__translation-keys';
import { DialogContainer as PruDialogContainer } from '../../../components/common/dialog-container/dialog-container';
import { IconFont as PruIconFont } from '../../../components/icon-font/icon-font';
import { textStyleSet, spacing, palette as PruPalette } from '../../../theme';
import { useTranslation } from 'react-i18next';
import React from 'react';
import { useSelector } from 'react-redux';
import { ResourceItem } from '../resource-item/resource-item';
import { Button } from '../../base/button/button';
import { SUBMIT_BUTTON, ACTIVE_SUBMIT_BUTTON } from '../../../theme/commonStyles';
import { Resource } from '../../model/common';

const paddingHorizontal = 18;
const CONTAINER: ViewStyle = {
  marginHorizontal: -paddingHorizontal, // 配合dialog宽度占屏100%
  width: Dimensions.get('window').width,
  paddingHorizontal: spacing.spacing12,
  paddingBottom: 20,
};

export interface SmartSharePopupProps {
  /**
   * An optional style override useful for padding & margin.
   */
  style?: ViewStyle;
  visible: boolean;
  dismissCallBack: Function;
  onSubmit?: Function;
  resource?: Resource;
}

export const LineStyle: ViewStyle = {
  // flex: 1,
  flexDirection: 'row',
  // paddingHorizontal: spacing.spacing6,
  padding: spacing.spacing12,
  borderBottomWidth: 1,
  borderBottomColor: PruPalette.greyf4,
};

export const LineTextStyle: TextStyle = {
  ...textStyleSet.content_16_bold,
  flex: 1,
  paddingHorizontal: spacing.spacing12,
};
/**
 * Describe your component here
 */
export function SmartSharePopup(props: SmartSharePopupProps) {
  const { style, resource } = props;

  const { t } = useTranslation();
  const targetResourceSelector = useSelector((state: any) => {
    return state && state.common.targetResource;
  });
  const targetResource: Resource = resource || targetResourceSelector;
  const [selectedRecruitLink, setSelectRecruitLink] = React.useState(false);
  const [selectedNameCard, setSelectNameCard] = React.useState(false);
  return (
    <PruDialogContainer visible={props.visible} dismissCallBack={props.dismissCallBack}>
      <View style={[CONTAINER, style]}>
        <View
          style={{
            paddingVertical: spacing.spacing16,
            paddingLeft: spacing.spacing12,
            paddingRight: spacing.spacing6,
          }}>
          <Text
            style={{
              ...textStyleSet.title_18_med,
              color: PruPalette.grey33,
            }}>
            {t(CommonTranslateKey.pru_smart_share)}
          </Text>
          <TouchableOpacity
            activeOpacity={0.9}
            onPress={() => {
              props.dismissCallBack();
            }}
            style={{ position: 'absolute', right: 0, top: 18 }}>
            <PruIconFont name="close" color={PruPalette.grey33} size={20} />
          </TouchableOpacity>
        </View>
        <View style={{ flexDirection: 'column' }}>
          <View
            style={{
              height: 135,
              shadowOffset: { height: 2, width: 0 },
              shadowOpacity: 0.1,
              marginBottom: spacing.spacing20,
            }}>
            <ResourceItem data={targetResource} />
          </View>
        </View>
        <View>
          {targetResource?.withRecruitLink ? (
            <Button
              onPress={() => {
                setSelectRecruitLink(!selectedRecruitLink);
                if (!selectedRecruitLink) {
                  setSelectNameCard(false);
                }
              }}
              style={LineStyle}>
              <PruIconFont
                name="link"
                color={selectedRecruitLink ? PruPalette.red : PruPalette.grey33}
                size={24}
              />
              <Text
                style={{
                  ...LineTextStyle,
                  color: selectedRecruitLink ? PruPalette.red : PruPalette.grey33,
                }}>
                {t(CommonTranslateKey.with_recruit_link)}
              </Text>
              {selectedRecruitLink ? (
                <PruIconFont name="radio_selected" size={20} color={PruPalette.red} />
              ) : (
                <PruIconFont name="radio" size={20} color={PruPalette.grey85} />
              )}
            </Button>
          ) : null}
          {targetResource?.withNameCard ? (
            <Button
              onPress={() => {
                setSelectNameCard(!selectedNameCard);
                if (!selectedNameCard) {
                  setSelectRecruitLink(false);
                }
              }}
              style={LineStyle}>
              <PruIconFont
                name="contact1"
                color={selectedNameCard ? PruPalette.red : PruPalette.grey33}
                size={24}
              />
              <Text
                style={{
                  ...LineTextStyle,
                  color: selectedNameCard ? PruPalette.red : PruPalette.grey33,
                }}>
                {t(CommonTranslateKey.with_name_card)}
              </Text>
              {selectedNameCard ? (
                <PruIconFont name="radio_selected" size={20} color={PruPalette.red} />
              ) : (
                <PruIconFont name="radio" size={20} color={PruPalette.grey85} />
              )}
            </Button>
          ) : null}
        </View>
        <View
          style={{
            // width: Dimensions.get('screen').width,
            marginTop: spacing.spacing26,
            paddingHorizontal: spacing.spacing12,
          }}>
          <Button
            text={t(CommonTranslateKey.share_now)}
            onPress={() => {
              if (props.onSubmit) {
                props.onSubmit(selectedRecruitLink, selectedNameCard);
              }
            }}
            textStyle={{
              color: PruPalette.white,
              ...textStyleSet.title_18_med,
            }}
            style={[SUBMIT_BUTTON, ACTIVE_SUBMIT_BUTTON]}
          />
        </View>
      </View>
    </PruDialogContainer>
  );
}
