import * as React from 'react';
import { View, ViewStyle, TextStyle, TouchableOpacity, TextInput, Dimensions } from 'react-native';
import { useTranslation } from 'react-i18next';
import { pruTestID } from 'common_services_frontend';

import { color, spacing } from 'common_ui_components/app/theme';
import { IconFont } from 'common_ui_components/app/components/icon-font/icon-font';
import { TestID } from 'common_ui_components/app/components/test-id';
import { useNavigation } from '@react-navigation/core';
import { CommonTranslateKey } from 'common_ui_components';

const SEARCH_HEADER: ViewStyle = {
  // position: "absolute",
  top: 0,
  flexDirection: 'row',
  width: Dimensions.get('window').width,
  height: 44,
};
const searchHeight = 32;
export const SearchItemStyle: ViewStyle = {
  borderRadius: 16,
  height: searchHeight,
  backgroundColor: color.greyeb,
  paddingRight: spacing.spacing4,
  marginVertical: spacing.spacing6,
  marginRight: spacing.spacing20,
};
export const SearchInputStyle = {
  flex: 1,
  fontSize: 14,
  backgroundColor: color.transparent,
  height: searchHeight,
  paddingVertical: 0,
};

export interface SearchHeaderProps {
  searchKey: string;
  onSearchKeyChange: Function;
  placeholderTip?: string;
  onClear: Function;
  style?: ViewStyle;
}

export const SearchHeader: React.FunctionComponent<SearchHeaderProps> = (props) => {
  const { t } = useTranslation();
  const navigation = useNavigation();
  const {
    searchKey,
    onSearchKeyChange,
    placeholderTip = t(CommonTranslateKey.search_for),
    onClear,
    style,
  } = props;

  return (
    <View testID={TestID.Header} accessibilityLabel={TestID.Header} style={[SEARCH_HEADER, style]}>
      <TouchableOpacity
        activeOpacity={0.9}
        testID={TestID.LeftIcon}
        style={{
          height: 44,
          justifyContent: 'center',
          paddingRight: spacing.spacing14,
          paddingLeft: spacing.spacing18,
        }}
        onPress={() => {
          navigation.goBack();
        }}>
        <IconFont name="arrow_back" size={24} color={color.grey33} />
      </TouchableOpacity>
      <View
        style={{
          height: 44,
          flex: 1,
        }}>
        <View
          style={[
            SearchItemStyle,
            {
              flexDirection: 'row',
              justifyContent: 'center',
            },
          ]}>
          <IconFont
            style={{
              padding: spacing.spacing8,
            }}
            name="search"
            size={16}
            color={color.greyba}
          />
          <TextInput
            {...pruTestID('SearchInput')}
            autoFocus
            value={searchKey}
            onChange={(target) => onSearchKeyChange(target.nativeEvent.text)}
            placeholder={placeholderTip}
            placeholderTextColor={color.greyba}
            underlineColorAndroid={color.transparent}
            style={[SearchInputStyle, { lineHeight: 20 }]}
          />

          {!!searchKey && (
            <TouchableOpacity
              activeOpacity={0.9}
              testID={TestID.ClearIcon}
              style={{
                position: 'absolute',
                right: spacing.spacing2,
              }}
              onPress={() => onClear()}>
              <IconFont
                style={{
                  padding: spacing.spacing8,
                }}
                name="text_delete"
                size={16}
                color={color.greyba}
              />
            </TouchableOpacity>
          )}
        </View>
      </View>
    </View>
  );
};
