import * as React from 'react';
import { Dimensions, TextStyle, View, ViewStyle } from 'react-native';
import Modal from 'react-native-modal';
import { useSelector } from 'react-redux';
import { color } from '../../../theme';

const CONTAINER: ViewStyle = {
  justifyContent: 'center',
};

const TEXT: TextStyle = {
  fontSize: 14,
  color: color.primary,
};

export interface ModalContainerProps {
  /**
   * An optional style override useful for padding & margin.
   */
  children: any;
  visible: boolean;
  dismissCallBack: Function;
  containerStyle?: ViewStyle;
  dialogStyle?: ViewStyle;
  onModalHide?: Function;
}

/**
 * Describe your component here
 */
export function DialogContainer(props: ModalContainerProps) {
  const { containerStyle, dialogStyle, onModalHide } = props;

  const [visible, setVisible] = React.useState(false);

  const authState = useSelector((state: any) => {
    return state.auth; // Flags to determine Landing Auth or Home Stack
  });
  const { agentCode } = authState;
  React.useEffect(() => {
    props.dismissCallBack?.();
    setVisible(false);
  }, [agentCode]);
  React.useEffect(() => {
    setVisible(props.visible);
  }, [props.visible]);
  React.useEffect(() => {
    return () => {
      props.dismissCallBack?.();
      setVisible(false);
    };
  }, []);

  return (
    <>
      <Modal
        onModalHide={() => {
          onModalHide && onModalHide();
        }}
        onBackdropPress={() => {
          props.dismissCallBack();
          setVisible(false);
          return true;
        }}
        isVisible={visible}
        style={[
          {
            justifyContent: 'flex-end',
            margin: 0,
          },
          containerStyle,
        ]}
        animationIn={'fadeIn'}>
        <View
          style={[
            {
              width: Dimensions.get('window').width,
              alignItems: 'center',
              // borderBottomLeftRadius: 0,
              // borderBottomRightRadius: 0,
            },
            dialogStyle,
          ]}>
          {props.children}
        </View>
      </Modal>
    </>
  );
}
