import * as React from 'react';
import { View, ViewStyle, TextStyle, ImageStyle, Text } from 'react-native';
import { useTranslation } from 'react-i18next';
import { palette, spacing } from 'common_ui_components/app/theme';
import { IconFont } from '../../icon-font/icon-font';
import Button from '../../Button';
import { IconTypes } from 'common_ui_components/app/components/icon-font/fonts/__icontype';
import { IconFontLayer } from 'common_ui_components/app/components/icon-font/icon-font-with-background';
import { TouchableOpacity } from 'react-native-gesture-handler';

export interface TransparentHeaderProps {
  /**
   * Main header, e.g. POWERED BY BOWSER
   */
  headerTx?: string;

  /**
   * header non-i18n
   */
  headerText?: string;

  /**
   * Icon that should appear on the left
   */
  leftIcon?: IconTypes;

  /**
   * What happens when you press the left icon
   */
  onLeftPress?(): void;

  /**
   * Icon that should appear on the right
   */
  rightShareIcon?: IconTypes;

  /**
   * Icon that should appear on the right
   */
  rightMenuIcon?: IconTypes;

  /**
   * What happens when you press the right icon
   */
  onRightSharePress?(): void;
  onRightMenuPress?(): void;

  /**
   * Container style overrides.
   */
  style?: ViewStyle;

  /**
   * Title style overrides.
   */
  titleStyle?: TextStyle;

  /**
   * Icon style overrides.
   */
  iconStyle?: ImageStyle;
}

// static styles
const ROOT: ViewStyle = {
  flexDirection: 'row',
  paddingHorizontal: spacing.spacing8,
  alignItems: 'center',
  paddingTop: spacing.spacing8,
  paddingBottom: spacing.spacing8,
  justifyContent: 'flex-start',
};
const TITLE: TextStyle = { textAlign: 'center' };
const TITLE_MIDDLE: ViewStyle = {
  flex: 1,
  justifyContent: 'center',
  marginTop: -30,
};
const LEFT: ViewStyle = { width: 32 };
const RIGHT: ViewStyle = { width: 32 };

export const TransparentHeader: React.FunctionComponent<TransparentHeaderProps> = (
  props,
) => {
  const { t } = useTranslation();
  const {
    onLeftPress,
    onRightSharePress,
    onRightMenuPress,
    rightShareIcon,
    rightMenuIcon,
    leftIcon,
    headerText,
    headerTx,
    style,
    titleStyle,
  } = props;
  const header = headerText || (headerTx && t(headerTx)) || '';

  return (
    <View style={{ ...ROOT, ...style }}>
      {
        leftIcon ? <TouchableOpacity onPress={onLeftPress}>
          <IconFontLayer
            name={leftIcon}
            backgroundColor={palette.grey33}
            backgroundOpacity={0.5}
            color={palette.white}
            backgroundSize={40}
            size={24}
          />
        </TouchableOpacity> : null
      }
    </View>
  );
};
