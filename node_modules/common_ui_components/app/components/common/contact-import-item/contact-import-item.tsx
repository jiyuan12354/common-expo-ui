import { TextStyle, ViewStyle, View, Text, TouchableOpacity, Keyboard } from 'react-native';
import {
  PruPalette,
  PruColor,
  textStyleSet,
  spacing,
  PruIconFont,
  PruHighLightText,
} from 'common_ui_components';
import { useTranslation } from 'react-i18next';
import { uuidv4, pruTestID } from 'common_services_frontend';
import { TestID } from 'common_ui_components/app/components/test-id';
import React, { useState, useEffect } from 'react';
// import { RecruitmentTranslateKey } from '../../translate/__translation-keys';
import { ExternalAvatar, FakeAvatar } from 'common_ui_components/app/components';
import { RecruitContact } from 'common_services_frontend/src/model/contacts';
import { AvatarColorSet } from 'recruitment_frontend/app/components';
import { CommonTranslateKey } from 'common_ui_components/app/translation/__translation-keys';

const CONTAINER: ViewStyle = {
  justifyContent: 'center',
};

const TEXT: TextStyle = {
  fontSize: 14,
  color: PruColor.primary,
};

export interface ContactImportItemProps {
  /**
   * An optional style override useful for padding & margin.
   */
  data: RecruitContact;
  highLightText?: string;
  imported?: boolean;
  refreshSelectTo?: boolean;
  onPressed?: (item: RecruitContact) => void;
  style?: ViewStyle;
}

/**
 * Describe your component here
 */
export function ContactImportItem(props: ContactImportItemProps) {
  const { t } = useTranslation();
  const { style } = props;
  const regex = /[-()\s]*/g;
  const [selected, setSelected] = useState(false);
  useEffect(() => {
    setSelected(Boolean(props.refreshSelectTo));
  }, [props.refreshSelectTo]);
  return (
    <TouchableOpacity
      accessible={false}
      activeOpacity={0.9}
      // testID={TestID.CandidateRowItem}
      // accessibilityLabel={TestID.CandidateRowItem}
      {...pruTestID('CandidateRowItem')}
      style={{
        flexDirection: 'row',
        marginLeft: 20,
        paddingVertical: spacing.spacing18,
      }}
      onPressIn={() => Keyboard.dismiss()}>
      <TouchableOpacity
        accessible={false}
        activeOpacity={0.9}
        onPress={() => {
          // console.log(!selected);
          setSelected(!selected);
          if (props.onPressed) {
            props.onPressed(props.data);
          }
        }}
        style={{
          flex: 1,
          marginRight: spacing.spacing40,
          flexDirection: 'row',
          alignItems: 'center',
        }}>
        <View
          style={{
            flex: 1,
          }}>
          <View
            style={{
              flexDirection: 'row',
            }}>
            {(() => {
              const name = `${props.data.name}`;
              const searchKey = props.highLightText;
              if (!searchKey || !name.toLocaleLowerCase().includes(searchKey.toLocaleLowerCase())) {
                return (
                  <Text
                    numberOfLines={1}
                    ellipsizeMode="tail"
                    style={{
                      ...textStyleSet.content_16_reg,
                      lineHeight: 24,
                    }}>
                    {name}
                  </Text>
                );
              }
              return (
                <PruHighLightText
                  textStyle={{
                    ...textStyleSet.content_16_reg,
                    lineHeight: 24,
                  }}
                  highLightText={searchKey}>
                  {name}
                </PruHighLightText>
              );
            })()}
          </View>
          <View style={{}}>
            <Text
              style={{
                ...textStyleSet.info_12_reg,
                color: PruPalette.grey85,
                lineHeight: 20,
              }}>
              {props.data.currentPhone}
            </Text>
          </View>
        </View>
        {props.imported ? (
          <Text
            style={{
              ...textStyleSet.info_12_reg,
              color: PruPalette.greyba,
              lineHeight: 20,
            }}>
            {t(CommonTranslateKey.imported)}
          </Text>
        ) : (
          <View {...pruTestID('ContactSelectRadio')}>
            {selected ? (
              <PruIconFont name="radio_selected" size={20} color={PruPalette.red} />
            ) : (
              <PruIconFont name="radio" size={20} color={PruPalette.grey85} />
            )}
          </View>
        )}
      </TouchableOpacity>
    </TouchableOpacity>
  );
}
