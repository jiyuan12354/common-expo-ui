import { ModalStyle } from 'common_ui_components/app/components/common/modal/Modal';
import { palette, textStyleSet } from 'common_ui_components/app/theme';
import React, { useState } from 'react';
import { StyleSheet, View, Text, TouchableOpacity } from 'react-native';
import { useTranslation } from 'react-i18next';
import { CommonTranslateKey } from 'common_ui_components/app/translation/__translation-keys';
import { pruTestID } from 'common_services_frontend';
import { IconFont } from '../../../icon-font/icon-font';

const styles = StyleSheet.create({
  WRAPPER: {
    backgroundColor: palette.white,
    marginHorizontal: 12,
    borderRadius: 16,
    justifyContent: 'center',
    alignItems: 'center',
    width: '90%',
  },
});
export interface ConfirmWithoutTitleModalProps {
  onClose?: Function;

  onConfirm: Function;
  onCancel: Function;
  description: string;
  confirmText?: string;
  cancelText?: string;

  modalId?: string;
}

export const ConfirmWithoutTitleModal: React.FC<ConfirmWithoutTitleModalProps & ModalStyle> = (
  props,
) => {
  const { t } = useTranslation();
  const {
    onClose,
    onConfirm,
    onCancel,
    description,
    confirmText,
    cancelText = t(CommonTranslateKey.cancel),
    modalId,
  } = props;
  const [selected, setSelected] = useState(false);
  return (
    <>
      <View style={styles.WRAPPER}>
        <View
          style={{
            marginVertical: 12,
          }}>
          <Text
            style={{
              ...textStyleSet.title_20_med,
              lineHeight: 28,
              color: palette.grey33,
              paddingHorizontal: 20,
              marginTop: 12,
              textAlign: 'center',
              alignContent: 'center',
            }}>
            {description}
          </Text>
        </View>

        {modalId ? (
          <TouchableOpacity
            activeOpacity={0.95}
            onPress={() => {
              setSelected(!selected);
            }}
            style={{
              flexDirection: 'row',
              width: '100%',
              paddingHorizontal: 16,
              alignItems: 'center',
            }}>
            <View>
              {selected ? (
                <IconFont name="radio_selected" size={20} color={palette.red} />
              ) : (
                <IconFont name="radio" size={20} color={palette.grey85} />
              )}
            </View>
            <Text
              style={{
                ...textStyleSet.content_14_reg,
                color: palette.grey33,
                paddingHorizontal: 8,
              }}>
              {t(CommonTranslateKey.no_remind_again)}
            </Text>
          </TouchableOpacity>
        ) : null}

        <View
          style={{
            paddingHorizontal: 14,
            width: '100%',
          }}>
          <TouchableOpacity
            accessible={false}
            activeOpacity={0.95}
            onPress={() => {
              if (onClose) {
                onClose();
              }
              // TODO: use promise to handle sequence
              setTimeout(() => onConfirm(selected && modalId), 500);
            }}
            style={{
              backgroundColor: palette.red,
              height: 50,
              marginVertical: 14,
              borderRadius: 10,
              width: '100%',
              justifyContent: 'center',
              alignItems: 'center',
            }}>
            <Text
              {...pruTestID('ConfirmButton')}
              style={{
                ...textStyleSet.content_16_med,
                lineHeight: 18,
                color: palette.white,
              }}>
              {confirmText || t(CommonTranslateKey.confirm)}
            </Text>
          </TouchableOpacity>
          <TouchableOpacity
            accessible={false}
            activeOpacity={0.95}
            onPress={() => {
              if (onClose) {
                onClose();
              }
              onCancel();
            }}
            style={{
              backgroundColor: palette.white,
              height: 50,
              marginBottom: 14,
              borderRadius: 10,
              width: '100%',
              justifyContent: 'center',
              alignItems: 'center',
              borderWidth: 2,
              borderColor: palette.grey33,
            }}>
            <Text
              {...pruTestID('CancelButton')}
              style={{
                ...textStyleSet.content_16_med,
                lineHeight: 18,
                color: palette.grey33,
              }}>
              {cancelText}
            </Text>
          </TouchableOpacity>
        </View>
      </View>
    </>
  );
};
