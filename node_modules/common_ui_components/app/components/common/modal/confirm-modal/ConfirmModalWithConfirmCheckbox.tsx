import { ModalStyle } from 'common_ui_components/app/components/common/modal/Modal';
import { palette, textStyleSet } from 'common_ui_components/app/theme';
import React, { useState } from 'react';
import { StyleSheet, View, Text, TouchableOpacity } from 'react-native';
import { Icon } from 'common_ui_components/app/components/base/icon/icon';
import { useTranslation } from 'react-i18next';
import { CommonTranslateKey } from 'common_ui_components/app/translation/__translation-keys';
import { IconFont } from 'common_ui_components/app/components/icon-font/icon-font';
import { pruTestID } from 'common_services_frontend';

const styles = StyleSheet.create({
  WRAPPER: {
    backgroundColor: palette.white,
    marginHorizontal: 12,
    borderRadius: 16,
    justifyContent: 'center',
    alignItems: 'center',
    width: '90%',
  },
});
export interface ConfirmModalWithConfirmCheckboxProps {
  onClose?: Function;

  onConfirm: Function;
  onCancel: Function;
  title: string;
  description: string;
  confirmCheckboxText?: string;
  confirmText?: string;
  cancelText?: string;

  modalId?: string;
}

export const ConfirmModalWithConfirmCheckbox: React.FC<
  ConfirmModalWithConfirmCheckboxProps & ModalStyle
> = (props) => {
  const { t } = useTranslation();
  const {
    onClose,
    onConfirm,
    onCancel,
    title,
    description,
    confirmCheckboxText,
    confirmText = t(CommonTranslateKey.confirm),
    cancelText = t(CommonTranslateKey.cancel),
    modalId,
  } = props;
  const [selected, setSelected] = useState(false);
  return (
    <>
      <View style={styles.WRAPPER}>
        <View
          style={{
            marginTop: 32,
          }}>
          <Text
            style={{
              ...textStyleSet.title_24_bold,
              lineHeight: 32,
              color: palette.grey33,
              paddingHorizontal: 20,
            }}>
            {title}
          </Text>
        </View>
        <View
          style={{
            marginTop: 12,
            marginBottom: 32,
          }}>
          <Text
            style={{
              ...textStyleSet.content_14_med,
              lineHeight: 22,
              color: palette.grey33,
              paddingHorizontal: 20,
            }}>
            {description}
          </Text>
        </View>

        <TouchableOpacity
          accessible={false}
          activeOpacity={0.95}
          onPress={() => {
            setSelected(!selected);
          }}
          style={{
            flexDirection: 'row',
            width: '100%',
            paddingHorizontal: 16,
            // alignItems: 'center',
          }}>
          <View>
            {selected ? (
              <IconFont name="radio_selected" size={20} color={palette.red} />
            ) : (
              <IconFont name="radio" size={20} color={palette.grey85} />
            )}
          </View>
          <Text
            {...pruTestID('RemindAgainMsg')}
            style={{
              ...textStyleSet.content_14_reg,
              color: palette.grey33,
              paddingHorizontal: 8,
            }}>
            {confirmCheckboxText || t(CommonTranslateKey.no_remind_again)}
          </Text>
        </TouchableOpacity>

        <View
          style={{
            paddingHorizontal: 14,
            width: '100%',
            marginTop: 2,
          }}>
          <TouchableOpacity
            accessible={false}
            activeOpacity={0.95}
            onPress={() => {
              if (selected) {
                onConfirm();
                if (onClose) {
                  onClose();
                }
              }
            }}
            style={{
              backgroundColor: selected ? palette.red : palette.greyba,
              height: 50,
              marginVertical: 14,
              borderRadius: 10,
              width: '100%',
              justifyContent: 'center',
              alignItems: 'center',
            }}>
            <Text
              {...pruTestID('ConfirmButton')}
              style={{
                ...textStyleSet.content_16_med,
                lineHeight: 18,
                color: palette.white,
              }}>
              {confirmText}
            </Text>
          </TouchableOpacity>
          <TouchableOpacity
            accessible={false}
            activeOpacity={0.95}
            onPress={() => {
              if (onClose) {
                onClose();
              }
              onCancel();
            }}
            style={{
              backgroundColor: palette.white,
              height: 50,
              marginBottom: 14,
              borderRadius: 10,
              width: '100%',
              justifyContent: 'center',
              alignItems: 'center',
              borderWidth: 2,
              borderColor: palette.grey33,
            }}>
            <Text
              {...pruTestID('CancelButton')}
              style={{
                ...textStyleSet.content_16_med,
                lineHeight: 18,
                color: palette.grey33,
              }}>
              {cancelText}
            </Text>
          </TouchableOpacity>
        </View>
      </View>
    </>
  );
};
