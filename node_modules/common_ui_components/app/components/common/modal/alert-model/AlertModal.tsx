import React from 'react';
import { View, Text, TouchableOpacity, StyleSheet } from 'react-native';
import { Colors, Font } from '../../../../style';
import { palette, textStyleSet } from 'common_ui_components/app/theme';
import { ModalStyle } from 'common_ui_components/app/components/common/modal/Modal';
import { CommonTranslateKey } from 'common_ui_components/app/translation/__translation-keys';
import { useTranslation } from 'react-i18next';
import { pruTestID } from 'common_services_frontend';

export interface AlertModelProps {
  title: string;
  content: string;
  onClose: () => void;
}

const styles = StyleSheet.create({
  WRAPPER: {
    backgroundColor: palette.white,
    marginHorizontal: 12,
    borderRadius: 16,
    justifyContent: 'center',
    width: '90%',
    paddingHorizontal: 14,
  },
});

export const AlertModal: React.FC<AlertModelProps & ModalStyle> = ({ title, content, onClose }) => {
  const { t } = useTranslation();
  return (
    <>
      <View style={styles.WRAPPER}>
        <View
          style={{
            marginTop: 32,
          }}>
          <Text
            {...pruTestID('AlertTitle')}
            style={{
              ...textStyleSet.title_24_bold,
              textAlign: content.length > 20 ? 'left' : 'center',
              lineHeight: 32,
              color: palette.grey33,
              paddingHorizontal: 20,
            }}>
            {title}
          </Text>
        </View>
        <View
          style={{
            marginVertical: 12,
          }}>
          {content?.length > 0 && (
            <Text
              {...pruTestID('AlertContent')}
              style={{
                ...textStyleSet.content_14_med,
                lineHeight: 22,
                color: palette.grey33,
                paddingHorizontal: 20,
              }}>
              {content}
            </Text>
          )}
        </View>
        <TouchableOpacity
          accessible={false}
          onPress={() => {
            if (onClose) {
              onClose();
            }
            onClose();
          }}
          style={{
            width: '100%',
            backgroundColor: Colors.primaryRed,
            alignItems: 'center',
            borderRadius: 10,
            padding: 14,
            marginVertical: 14,
          }}>
          <Text
            {...pruTestID('AlertConfirmButton')}
            style={{
              ...textStyleSet.content_16_bold,
              lineHeight: 24,
              color: Colors.white,
            }}>
            {t(CommonTranslateKey.confirm)}
          </Text>
        </TouchableOpacity>
      </View>
    </>
  );
};

export const AlertModal1: React.FC<AlertModelProps & ModalStyle> = ({
  title,
  content,
  onClose,
}) => {
  const { t } = useTranslation();
  return (
    <>
      <View style={styles.WRAPPER}>
        <View
          style={{
            marginTop: 32,
          }}>
          <Text
            style={{
              ...textStyleSet.title_24_bold,
              lineHeight: 32,
              color: palette.grey33,
              paddingHorizontal: 20,
            }}>
            {title}
          </Text>
        </View>
        <View
          style={{
            marginVertical: 12,
          }}>
          <Text
            style={{
              ...textStyleSet.content_14_med,
              lineHeight: 22,
              color: palette.grey33,
              paddingHorizontal: 20,
            }}>
            {description}
          </Text>
        </View>

        {modalId ? (
          <TouchableOpacity
            activeOpacity={0.95}
            onPress={() => {
              setSelected(!selected);
            }}
            style={{
              flexDirection: 'row',
              width: '100%',
              paddingHorizontal: 16,
              alignItems: 'center',
            }}>
            <View>
              {selected ? (
                <IconFont name="radio_selected" size={20} color={palette.red} />
              ) : (
                <IconFont name="radio" size={20} color={palette.grey85} />
              )}
            </View>
            <Text
              style={{
                ...textStyleSet.content_14_reg,
                color: palette.grey33,
                paddingHorizontal: 8,
              }}>
              {t(CommonTranslateKey.no_remind_again)}
            </Text>
          </TouchableOpacity>
        ) : null}

        <View
          style={{
            paddingHorizontal: 14,
            width: '100%',
          }}>
          <TouchableOpacity
            accessible={false}
            activeOpacity={0.95}
            onPress={() => {
              onConfirm(selected && modalId);
              if (onClose) {
                onClose();
              }
            }}
            style={{
              backgroundColor: palette.red,
              height: 50,
              marginVertical: 14,
              borderRadius: 10,
              width: '100%',
              justifyContent: 'center',
              alignItems: 'center',
            }}>
            <Text
              {...pruTestID('ConfirmButton')}
              style={{
                ...textStyleSet.content_16_med,
                lineHeight: 18,
                color: palette.white,
              }}>
              {confirmText}
            </Text>
          </TouchableOpacity>
          <TouchableOpacity
            accessible={false}
            activeOpacity={0.95}
            onPress={() => {
              if (onClose) {
                onClose();
              }
              onCancel();
            }}
            style={{
              backgroundColor: palette.white,
              height: 50,
              marginBottom: 14,
              borderRadius: 10,
              width: '100%',
              justifyContent: 'center',
              alignItems: 'center',
              borderWidth: 2,
              borderColor: palette.grey33,
            }}>
            <Text
              {...pruTestID('CancelButton')}
              style={{
                ...textStyleSet.content_16_med,
                lineHeight: 18,
                color: palette.grey33,
              }}>
              {cancelText}
            </Text>
          </TouchableOpacity>
        </View>
      </View>
    </>
  );
};
