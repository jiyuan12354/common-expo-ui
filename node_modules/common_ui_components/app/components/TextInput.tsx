import React, { memo, useState } from 'react';
import { View, StyleSheet, Text, ViewStyle, TextStyle } from 'react-native';
import { TextInput as Input } from 'react-native';
import { color, palette } from '../theme';

type Props = React.ComponentProps<typeof Input> & {
  errorText?: string;
  containerStyle?: ViewStyle;
  errorStyle?: TextStyle;
  textInputRef?: React.LegacyRef<Input>
};

const INPUT__STYLE__FOCUS: ViewStyle = {
  backgroundColor: palette.white,
  borderTopLeftRadius: 4,
  borderTopRightRadius: 4,
  borderBottomWidth: 2,
  borderBottomColor: palette.red,
};
const INPUT__STYLE__BLUR: ViewStyle = {
  backgroundColor: palette.white,
  borderTopLeftRadius: 4,
  borderTopRightRadius: 4,
};
const TextInput = ({ errorText, textInputRef, ...props }: Props) => {
  const [focus, setFocus] = useState(false);
  return (
    <View
      style={[
        styles.container,
        props.containerStyle,
        focus ? INPUT__STYLE__FOCUS : INPUT__STYLE__BLUR,
      ]}>
      <Input
        ref={textInputRef}
        onFocus={() => {
          setFocus(true);
        }}
        onBlur={() => {
          setFocus(false);
        }}
        selectionColor={color.primary}
        {...props}
        style={[styles.input, props.style]}
      />
      {errorText ? <Text style={[styles.error, props.errorStyle]}>{errorText}</Text> : null}
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    width: '100%',
    marginVertical: 0,
  },
  input: {
    backgroundColor: 'transparent',
    padding: 0,
  },
  error: {
    fontSize: 14,
    color: color.error,
    paddingHorizontal: 4,
    paddingTop: 4,
  },
});

export default memo(TextInput);
