import { CommonTranslateKey } from '../../../../translation/__translation-keys';
import moment from 'moment';

const now = () => {
  return moment();
};

const endOfToday = () => {
  return now().endOf('day').toISOString();
};

export const last_30_days_rages = [
  now().startOf('day').subtract(29, 'days').toISOString(),
  endOfToday(),
];

export const last_7_days_ranges = [
  now().startOf('day').subtract(6, 'days').toISOString(),
  endOfToday(),
];

export enum dateType {
  ALL = 'ALL',
  WTD = 'WTD',
  MTD = 'MTD',
  YTD = 'YTD',
  today = 'today',
  last_7_days = 'last_7_days',
  last_30_days = 'last_30_days',
  customize = 'customize',
}

export const getConfigs = (t: any) => {
  const configs = [
    {
      label: t(CommonTranslateKey.all),
      key: dateType.ALL,
      dataRange: () => {
        return '';
      },
    },
    {
      label: t(CommonTranslateKey.WTD),
      key: dateType.WTD,
      dataRange: () => {
        const isSunday = now().startOf('week').isoWeekday() === 7;
        const startDate = isSunday
          ? now().subtract(1, 'days').startOf('week').add(1, 'days')
          : now().startOf('week').add(1, 'days');

        return [startDate.startOf('day').toISOString(), endOfToday()];
      },
    },
    {
      label: t(CommonTranslateKey.MTD),
      key: dateType.MTD,
      dataRange: () => {
        const startDate = now().startOf('month').toISOString();
        return [startDate, endOfToday()];
      },
    },
    {
      label: t(CommonTranslateKey.YTD),
      key: dateType.YTD,
      dataRange: () => {
        const startDate = now().startOf('year').toISOString();
        return [startDate, endOfToday()];
      },
    },
    {
      label: t(CommonTranslateKey.today),
      key: dateType.today,
      dataRange: () => {
        const startDate = now().startOf('day').toISOString();
        return [startDate, endOfToday()];
      },
    },
    {
      label: t(CommonTranslateKey.last_7_days),
      key: dateType.last_7_days,
      dataRange: () => {
        return last_7_days_ranges;
      },
    },
    {
      label: t(CommonTranslateKey.last_30_days),
      key: dateType.last_30_days,
      dataRange: () => {
        const startDate = now().startOf('day').subtract(29, 'days').toISOString();
        return [startDate, endOfToday()];
      },
    },
    {
      label: t(CommonTranslateKey.customize),
      key: dateType.customize,
      dataRange: () => {
        const startDate = now().startOf('day').subtract(7, 'days').toISOString();
        return [startDate, endOfToday()];
      },
    },
  ];

  return configs;
};
