import { ParamListBase } from '@react-navigation/native';
import {
  PruHeader,
  PruScreen,
  PruSharePDF,
  PDFViewer as PruPDFViewer,
  modalService as PruModalService,
} from '../../components';
import { CommonTranslateKey } from '../../translation/__translation-keys';
import { palette as PruPalette } from '../../theme';
import React, { FC, useEffect, useState } from 'react';
import { useTranslation } from 'react-i18next';
import { StyleSheet, Text, View } from 'react-native';
import { NativeStackNavigationProp } from 'react-native-screens/lib/typescript/native-stack';
import { ENCRYPTED_MSG } from '../../components';
import { RouteProp } from '@react-navigation/core';
import { CommonNavigatorParams } from '../../navigation/commomNavigatorParams';
import { AppRoutes } from 'common_services_frontend';

export type PolicyPDFViewScreenProps = {
  navigation: NativeStackNavigationProp<ParamListBase>;
  route: RouteProp<CommonNavigatorParams, AppRoutes.PDF_VIEWER>;
};

const styles = StyleSheet.create({
  root: {
    flex: 1,
    width: '100%',
  },
  header: {
    borderBottomWidth: 1,
    borderBottomColor: PruPalette.greyeb,
  },
  contentContainer: {
    flex: 1,
    width: '100%',
    justifyContent: 'center',
    alignItems: 'center',
  },
});

export const PDFViewerScreen: FC<PolicyPDFViewScreenProps> = ({ route, navigation }) => {
  const { pdfName, pdfUrl, pdfPassword } = route.params;

  const { t } = useTranslation('Common');
  const [error, setError] = useState('');
  const [filePath, setFilePath] = useState('');
  const [password, setPassword] = useState(pdfPassword);

  useEffect(() => {
    console.log(`pdfUrl: ${pdfUrl}`);
  }, [pdfUrl]);

  return (
    <PruScreen style={styles.root}>
      <PruHeader
        style={styles.header}
        headerText={pdfName}
        titleStyle={{
          fontSize: 20,
          fontWeight: 'bold',
          color: PruPalette.grey33,
          textAlign: 'left',
        }}
        leftIcon="arrow_back"
        onLeftPress={() => {
          if (navigation.canGoBack()) {
            navigation.pop();
          }
        }}
        rightIcon={'share'}
        onRightPress={() => {
          if (filePath) {
            PruModalService.confirm({
              title: t(CommonTranslateKey.reminder),
              description: t('Policy:policy_flyer_warning'),
              confirmText: t(CommonTranslateKey.confirm),
              cancelText: t(CommonTranslateKey.cancel),
              onConfirm: () => {
                setTimeout(() => {
                  PruSharePDF({
                    fileUrl: filePath,
                    fileName: pdfName ?? 'Document',
                    type: 'application/pdf',
                  });
                }, 500);
              },
              onCancel: () => {},
              onClose: () => {},
            });
          }
        }}
      />
      <View style={styles.contentContainer}>
        {error === '' || error === ENCRYPTED_MSG ? (
          <PruPDFViewer
            uri={pdfUrl}
            password={password}
            setFilePath={setFilePath}
            setError={setError}
          />
        ) : (
          <Text>{t(CommonTranslateKey.unknown_error_retry)}</Text>
        )}
      </View>
    </PruScreen>
  );
};
