import * as React from 'react';
import { createIconSet } from 'react-native-vector-icons';
import { StyleSheet, View } from 'react-native';
import { icons, IconTypes } from 'common_ui_components/app/components/icon-font/fonts/__icontype';
import { IconFontProps, IconFont } from 'common_ui_components/app/components/icon-font/icon-font';
import { color } from 'common_ui_components/app/theme';

const Icon: any = createIconSet(icons, 'iconfont', 'iconfont.ttf');

export interface IconFontLayerProps {
  backgroundColor?: string;
  size: number;
  iconName: IconTypes;
  iconSize?: number;
  iconColor: string;
  backgroundOpacity?: number;
  borderRadius?: number | string;
  borderColor?: string;
  borderWidth?: number;
}

/**
 * React.FunctionComponent for your hook(s) needs
 *
 * Component description here for TypeScript tips.
 */
export const IconFontLayer: React.FunctionComponent<IconFontLayerProps> = (props) => {
  const {
    backgroundColor = color.transparent,
    backgroundOpacity,
    borderRadius,
    size: backgroundSize,
    borderColor,
    borderWidth,
    ...rest
  } = props;
  const iconSize = rest.iconSize ?? Math.floor((backgroundSize * 54) / 100);
  return (
    <View
      style={{
        backgroundColor,
        width: backgroundSize,
        height: backgroundSize,
        borderRadius: borderRadius,
        borderWidth: borderWidth,
        borderColor: borderColor,
        opacity: backgroundOpacity ?? 1,
        justifyContent: 'center',
        alignItems: 'center',
      }}>
      <IconFont name={rest.iconName} size={iconSize} color={rest.iconColor} />
    </View>
  );
};
