import * as React from 'react';
import { mergeAll, flatten } from 'ramda';
import {
  buttonViewPresets,
  disabledButtonViewPresets,
} from 'common_ui_components/app/components-ui/button/button.presets';
import { ButtonProps } from 'common_ui_components/app/components-ui/button/button.props';
import { IconTypes } from 'common_ui_components/app/components/icon-font/fonts/__icontype';
import { TextButton } from './text-button';
import { TextStyle } from 'react-native';
import { color, textStyleSet } from 'common_ui_components/app/theme';

/**
 * For your text displaying needs.
 *
 * This component is a HOC over the built-in React Native one.
 */
const TextStyleMap: Record<string, TextStyle> = {
  primary: {
    ...textStyleSet.text_16_bold,
    color: color.white,
  },
  secondary: {
    ...textStyleSet.text_16_bold,
  },
};
export function TextIconButton(
  props: ButtonProps & { icon: IconTypes; iconSize?: number; iconFirst?: boolean },
) {
  // grab the props
  const {
    preset = 'primary',
    text,
    style: styleOverride,
    textStyle: textStyleOverride,
    children,
    disabled,
    icon,
    iconSize,
    iconFirst,
    ...rest
  } = props;
  const _buttonViewPresets = disabled ? disabledButtonViewPresets : buttonViewPresets;
  const viewStyle = mergeAll(
    flatten([
      _buttonViewPresets[preset] || _buttonViewPresets.primary,
      { paddingVertical: 10 },
      styleOverride,
    ]),
  );
  return (
    <TextButton
      model="large"
      text={text || ''}
      style={viewStyle}
      textStyle={TextStyleMap[preset]}
      {...rest}></TextButton>
  );
}
