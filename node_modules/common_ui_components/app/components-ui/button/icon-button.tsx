import * as React from 'react';
import { GestureResponderEvent } from 'react-native';
import { ButtonContainer } from './button';
import { color } from 'common_ui_components/app/theme';
import {
  IconFontLayer,
  IconFontLayerProps,
} from 'common_ui_components/app/components-ui/icon/icon-font-with-background';
import { AtLeastRequired, Preset, PresetEnum } from './button.presets';

/**
 * For your text displaying needs.
 *
 * This component is a HOC over the built-in React Native one.
 */
type IconButtonProps = AtLeastRequired<IconFontLayerProps, 'size' | 'iconName'> & {
  disabled?: boolean;
  onPress?: (event: GestureResponderEvent) => void;
  matchParent?: boolean;
  preset?: Preset;
};

const getPresetStyleSet = (preset: Preset, disabled: boolean) => {
  switch (preset) {
    case PresetEnum.primary: {
      const iconColor = disabled ? color.greycc : color.grey33;
      return {
        backgroundColor: color.transparent,
        borderRadius: 12,
        borderColor: color.greycc,
        borderWidth: 2,
        iconColor,
      };
    }
    default: {
      const iconColor = disabled ? color.greycc : color.grey33;
      return {
        backgroundColor: color.transparent,
        borderRadius: 12,
        borderColor: color.greycc,
        borderWidth: 2,
        iconColor,
      };
    }
  }
};

export function IconButton(props: IconButtonProps) {
  // grab the props
  const {
    preset = 'primary',
    disabled,
    size: backgroundSize,
    iconName,
    matchParent = false,
    backgroundColor,
    borderRadius,
    borderColor,
    borderWidth,
    iconColor,
    ...rest
  } = props;

  const styleSet = getPresetStyleSet(preset, disabled);
  return (
    <ButtonContainer
      disabled={disabled}
      matchParent={matchParent}
      style={{
        borderRadius: 12,
        backgroundColor: backgroundColor,
      }}
      {...rest}>
      <IconFontLayer
        iconName={iconName}
        size={backgroundSize}
        iconSize={backgroundSize / 2}
        iconColor={iconColor ?? styleSet.iconColor}
        borderRadius={borderRadius ?? styleSet.borderRadius}
        borderWidth={borderWidth ?? styleSet.borderWidth}
        borderColor={borderColor ?? styleSet.borderColor}
      />
    </ButtonContainer>
  );
}
