import * as React from 'react';
import { Text, TextStyle, ViewStyle, GestureResponderEvent, View } from 'react-native';
import { color, textStyleSet } from 'common_ui_components/app/theme';
import { ButtonContainer } from 'common_ui_components/app/components-ui/button/button';

import { IconFont } from '../../../app/components/icon-font/icon-font';
import { IconTypes } from '../../../app/components/icon-font/fonts/__icontype';

type TextModel = 'small' | 'middle' | 'large';
export interface TextButtonProps {
  model?: TextModel;
  style?: ViewStyle;
  text: string;
  textStyle?: TextStyle;

  disabled?: boolean;
  onPress?: (event: GestureResponderEvent) => void;
  prefixIcon?: IconTypes;
  prefixSpace?: number;
  suffixIcon?: IconTypes;
  suffixSpace?: number;
}
const TextViewBaseStyle: ViewStyle = {
  justifyContent: 'center',
  alignItems: 'center',
  // backgroundColor: 'red',
};
const TextStyleMap: Record<TextModel, TextStyle> = {
  small: textStyleSet.text_12_med,
  middle: textStyleSet.text_14_med,
  large: textStyleSet.text_16_med,
};
const getTextStyle = (model: TextModel, disabled?: boolean) => {
  if (disabled) {
    return {
      ...TextStyleMap[model],
      color: color.greycc,
    };
  }
  return {
    ...TextStyleMap[model],
    color: color.grey33,
  };
};
const getTextViewStyle = (disabled?: boolean) => {
  return TextViewBaseStyle;
};
export function TextButton(props: TextButtonProps) {
  // grab the props
  const { text, disabled, model, style, textStyle, ...rest } = props;
  // set default icon
  const suffixIcon = rest?.prefixIcon ?? rest?.suffixIcon ? rest?.suffixIcon : 'arrow';
  return (
    <ButtonContainer disabled={disabled} style={[getTextViewStyle(disabled), style]} {...rest}>
      <Text style={[getTextStyle(model, disabled), textStyle]}>
        {rest?.prefixIcon && (
          <IconFont name={rest?.prefixIcon} size={{ small: 12, middle: 14, large: 16 }[model]} />
        )}
        {rest?.prefixIcon && <View style={{ width: rest.prefixSpace ?? 8 }} />}
        {text}
        {suffixIcon && <View style={{ width: rest.suffixSpace ?? 4 }} />}
        {suffixIcon && (
          <IconFont name={suffixIcon} size={{ small: 12, middle: 14, large: 16 }[model]} />
        )}
      </Text>
    </ButtonContainer>
  );
}
